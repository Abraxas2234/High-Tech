<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Clients extends \AppBundle\Entity\Clients implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientId', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientName', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientFirstname', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientPassword', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientPhone', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientAdress', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientZipCode', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientCity', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientCountry'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientId', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientName', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientFirstname', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientPassword', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientPhone', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientAdress', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientZipCode', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientCity', '' . "\0" . 'AppBundle\\Entity\\Clients' . "\0" . 'clientCountry'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Clients $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getClientId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getClientId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientId', []);

        return parent::getClientId();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientName($clientName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientName', [$clientName]);

        return parent::setClientName($clientName);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientName', []);

        return parent::getClientName();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientFirstname($clientFirstname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientFirstname', [$clientFirstname]);

        return parent::setClientFirstname($clientFirstname);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientFirstname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientFirstname', []);

        return parent::getClientFirstname();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientPassword($clientPassword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientPassword', [$clientPassword]);

        return parent::setClientPassword($clientPassword);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientPassword', []);

        return parent::getClientPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientPhone($clientPhone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientPhone', [$clientPhone]);

        return parent::setClientPhone($clientPhone);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientPhone', []);

        return parent::getClientPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientAdress($clientAdress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientAdress', [$clientAdress]);

        return parent::setClientAdress($clientAdress);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientAdress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientAdress', []);

        return parent::getClientAdress();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientZipCode($clientZipCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientZipCode', [$clientZipCode]);

        return parent::setClientZipCode($clientZipCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientZipCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientZipCode', []);

        return parent::getClientZipCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientCity($clientCity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientCity', [$clientCity]);

        return parent::setClientCity($clientCity);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientCity', []);

        return parent::getClientCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientCountry($clientCountry)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientCountry', [$clientCountry]);

        return parent::setClientCountry($clientCountry);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientCountry', []);

        return parent::getClientCountry();
    }

}
