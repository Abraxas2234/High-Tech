<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Gpu extends \AppBundle\Entity\Gpu implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuId', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuModel', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuFrequency', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuInterface', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuMemory', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuMemoryFrequency', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuDetails'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuId', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuModel', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuFrequency', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuInterface', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuMemory', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuMemoryFrequency', '' . "\0" . 'AppBundle\\Entity\\Gpu' . "\0" . 'gpuDetails'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Gpu $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getGpuId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getGpuId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGpuId', []);

        return parent::getGpuId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGpuModel($gpuModel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGpuModel', [$gpuModel]);

        return parent::setGpuModel($gpuModel);
    }

    /**
     * {@inheritDoc}
     */
    public function getGpuModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGpuModel', []);

        return parent::getGpuModel();
    }

    /**
     * {@inheritDoc}
     */
    public function setGpuFrequency($gpuFrequency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGpuFrequency', [$gpuFrequency]);

        return parent::setGpuFrequency($gpuFrequency);
    }

    /**
     * {@inheritDoc}
     */
    public function getGpuFrequency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGpuFrequency', []);

        return parent::getGpuFrequency();
    }

    /**
     * {@inheritDoc}
     */
    public function setGpuInterface($gpuInterface)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGpuInterface', [$gpuInterface]);

        return parent::setGpuInterface($gpuInterface);
    }

    /**
     * {@inheritDoc}
     */
    public function getGpuInterface()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGpuInterface', []);

        return parent::getGpuInterface();
    }

    /**
     * {@inheritDoc}
     */
    public function setGpuMemory($gpuMemory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGpuMemory', [$gpuMemory]);

        return parent::setGpuMemory($gpuMemory);
    }

    /**
     * {@inheritDoc}
     */
    public function getGpuMemory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGpuMemory', []);

        return parent::getGpuMemory();
    }

    /**
     * {@inheritDoc}
     */
    public function setGpuMemoryFrequency($gpuMemoryFrequency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGpuMemoryFrequency', [$gpuMemoryFrequency]);

        return parent::setGpuMemoryFrequency($gpuMemoryFrequency);
    }

    /**
     * {@inheritDoc}
     */
    public function getGpuMemoryFrequency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGpuMemoryFrequency', []);

        return parent::getGpuMemoryFrequency();
    }

    /**
     * {@inheritDoc}
     */
    public function setGpuDetails($gpuDetails)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGpuDetails', [$gpuDetails]);

        return parent::setGpuDetails($gpuDetails);
    }

    /**
     * {@inheritDoc}
     */
    public function getGpuDetails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGpuDetails', []);

        return parent::getGpuDetails();
    }

}
